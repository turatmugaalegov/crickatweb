{"ast":null,"code":"import { FormGroup, FormControl, Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../data/user-service\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"@angular/material/input\";\nimport * as i4 from \"@angular/material/form-field\";\nimport * as i5 from \"@angular/material/card\";\nimport * as i6 from \"@angular/material/button\";\nimport * as i7 from \"@angular/forms\";\nexport class LoginComponent {\n  constructor(userService) {\n    this.userService = userService;\n    this.loginForm = new FormGroup({\n      username: new FormControl('', Validators.required),\n      password: new FormControl('', Validators.required)\n    });\n  }\n  ngOnInit() {}\n  login() {\n    if (this.loginForm.valid) {\n      this.userService.login(this.loginForm.value.username, this.loginForm.value.password).subscribe(response => {\n        // Handle response, save the token, etc.\n        console.log(response);\n        localStorage.setItem('token', response.token); // save the token\n      }, error => {\n        // Handle error\n        console.error(error);\n      });\n    } else {\n      // Handle form validation error\n    }\n  }\n  static #_ = this.…µfac = function LoginComponent_Factory(t) {\n    return new (t || LoginComponent)(i0.…µ…µdirectiveInject(i1.UserService));\n  };\n  static #_2 = this.…µcmp = /*@__PURE__*/i0.…µ…µdefineComponent({\n    type: LoginComponent,\n    selectors: [[\"app-login\"]],\n    decls: 28,\n    vars: 1,\n    consts: [[3, \"formGroup\", \"ngSubmit\"], [\"matInput\", \"\", \"formControlName\", \"username\"], [\"type\", \"password\", \"matInput\", \"\", \"formControlName\", \"password\"], [\"mat-raised-button\", \"\", \"color\", \"primary\", \"type\", \"submit\"], [\"routerLink\", \"/register\", \"mat-raised-button\", \"\", \"color\", \"accent\"]],\n    template: function LoginComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.…µ…µelementStart(0, \"mat-card\")(1, \"mat-card-header\")(2, \"h1\");\n        i0.…µ…µtext(3, \"Willkommen auf Crickat \\uD83D\\uDC4B\\uD83C\\uDFFC\");\n        i0.…µ…µelementEnd()();\n        i0.…µ…µelementStart(4, \"mat-card-content\")(5, \"p\");\n        i0.…µ…µtext(6, \" Hier findest du Events in deiner N\\u00E4he, die dich wirklich interessieren!\");\n        i0.…µ…µelement(7, \"br\");\n        i0.…µ…µtext(8, \" Um die Seite zu nutzen musst du einen Account erstellen bzw. dich einloggen. \");\n        i0.…µ…µelementEnd()()();\n        i0.…µ…µelementStart(9, \"mat-card\")(10, \"mat-card-header\")(11, \"h1\");\n        i0.…µ…µtext(12, \"Login\");\n        i0.…µ…µelementEnd()();\n        i0.…µ…µelementStart(13, \"mat-card-content\")(14, \"form\", 0);\n        i0.…µ…µlistener(\"ngSubmit\", function LoginComponent_Template_form_ngSubmit_14_listener() {\n          return ctx.login();\n        });\n        i0.…µ…µelementStart(15, \"mat-form-field\")(16, \"mat-label\");\n        i0.…µ…µtext(17, \"Benutzername\");\n        i0.…µ…µelementEnd();\n        i0.…µ…µelement(18, \"input\", 1);\n        i0.…µ…µelementEnd();\n        i0.…µ…µelementStart(19, \"mat-form-field\")(20, \"mat-label\");\n        i0.…µ…µtext(21, \"Passwort\");\n        i0.…µ…µelementEnd();\n        i0.…µ…µelement(22, \"input\", 2);\n        i0.…µ…µelementEnd();\n        i0.…µ…µelementStart(23, \"div\")(24, \"button\", 3);\n        i0.…µ…µtext(25, \"Login\");\n        i0.…µ…µelementEnd();\n        i0.…µ…µelementStart(26, \"a\", 4);\n        i0.…µ…µtext(27, \"Account erstellen\");\n        i0.…µ…µelementEnd()()()()();\n      }\n      if (rf & 2) {\n        i0.…µ…µadvance(14);\n        i0.…µ…µproperty(\"formGroup\", ctx.loginForm);\n      }\n    },\n    dependencies: [i2.RouterLink, i3.MatInput, i4.MatFormField, i4.MatLabel, i5.MatCard, i5.MatCardContent, i5.MatCardHeader, i6.MatAnchor, i6.MatButton, i7.…µNgNoValidate, i7.DefaultValueAccessor, i7.NgControlStatus, i7.NgControlStatusGroup, i7.FormGroupDirective, i7.FormControlName],\n    styles: [\"mat-card[_ngcontent-%COMP%] {\\n    margin: 20px;\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvbG9naW4vbG9naW4uY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtJQUNJLFlBQVk7QUFDaEIiLCJzb3VyY2VzQ29udGVudCI6WyJtYXQtY2FyZCB7XG4gICAgbWFyZ2luOiAyMHB4O1xufSJdLCJzb3VyY2VSb290IjoiIn0= */\"]\n  });\n}","map":{"version":3,"names":["FormGroup","FormControl","Validators","LoginComponent","constructor","userService","loginForm","username","required","password","ngOnInit","login","valid","value","subscribe","response","console","log","localStorage","setItem","token","error","_","i0","…µ…µdirectiveInject","i1","UserService","_2","selectors","decls","vars","consts","template","LoginComponent_Template","rf","ctx","…µ…µelementStart","…µ…µtext","…µ…µelementEnd","…µ…µelement","…µ…µlistener","LoginComponent_Template_form_ngSubmit_14_listener","…µ…µadvance","…µ…µproperty"],"sources":["/Users/timn/Documents/Studium/Semester 3/Crickat Github/crickatweb/src/app/login/login.component.ts","/Users/timn/Documents/Studium/Semester 3/Crickat Github/crickatweb/src/app/login/login.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { UserService } from '../data/user-service';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n  loginForm: FormGroup;\n\n  constructor(private userService: UserService) {\n    this.loginForm = new FormGroup({\n      username: new FormControl('', Validators.required), // You can add more validators as needed\n      password: new FormControl('', Validators.required)\n    });\n  }\n\n  ngOnInit() { }\n\n\n  login(): void {\n    if (this.loginForm.valid) {\n      this.userService.login(this.loginForm.value.username, this.loginForm.value.password).subscribe(\n        response => {\n          // Handle response, save the token, etc.\n          console.log(response);\n          localStorage.setItem('token', response.token); // save the token\n        },\n        error => {\n          // Handle error\n          console.error(error);\n        }\n      );\n    } else {\n      // Handle form validation error\n    }\n  }\n\n\n\n\n}\n","<mat-card>\n    <mat-card-header>\n        <h1>Willkommen auf Crickat üëãüèº</h1>\n    </mat-card-header>\n    <mat-card-content>\n        <p>\n            Hier findest du Events in deiner N√§he, die dich wirklich interessieren!<br>\n            Um die Seite zu nutzen musst du einen Account erstellen bzw. dich einloggen.\n        </p>\n    </mat-card-content>\n</mat-card>\n<mat-card>\n    <mat-card-header>\n        <h1>Login</h1>\n    </mat-card-header>\n    <mat-card-content>\n        <form [formGroup]=\"loginForm\" (ngSubmit)=\"login()\">\n            <mat-form-field>\n                <mat-label>Benutzername</mat-label>\n                <input matInput formControlName=\"username\">\n            </mat-form-field>\n            <mat-form-field>\n                <mat-label>Passwort</mat-label>\n                <input type=\"password\" matInput formControlName=\"password\">\n            </mat-form-field>\n            <div>\n                <button mat-raised-button color=\"primary\" type=\"submit\">Login</button>\n                <a routerLink=\"/register\" mat-raised-button color=\"accent\">Account erstellen</a>\n            </div>\n        </form>\n    </mat-card-content>\n</mat-card>"],"mappings":"AAEA,SAASA,SAAS,EAAEC,WAAW,EAAEC,UAAU,QAAQ,gBAAgB;;;;;;;;;AAOnE,OAAM,MAAOC,cAAc;EAGzBC,YAAoBC,WAAwB;IAAxB,KAAAA,WAAW,GAAXA,WAAW;IAC7B,IAAI,CAACC,SAAS,GAAG,IAAIN,SAAS,CAAC;MAC7BO,QAAQ,EAAE,IAAIN,WAAW,CAAC,EAAE,EAAEC,UAAU,CAACM,QAAQ,CAAC;MAClDC,QAAQ,EAAE,IAAIR,WAAW,CAAC,EAAE,EAAEC,UAAU,CAACM,QAAQ;KAClD,CAAC;EACJ;EAEAE,QAAQA,CAAA,GAAK;EAGbC,KAAKA,CAAA;IACH,IAAI,IAAI,CAACL,SAAS,CAACM,KAAK,EAAE;MACxB,IAAI,CAACP,WAAW,CAACM,KAAK,CAAC,IAAI,CAACL,SAAS,CAACO,KAAK,CAACN,QAAQ,EAAE,IAAI,CAACD,SAAS,CAACO,KAAK,CAACJ,QAAQ,CAAC,CAACK,SAAS,CAC5FC,QAAQ,IAAG;QACT;QACAC,OAAO,CAACC,GAAG,CAACF,QAAQ,CAAC;QACrBG,YAAY,CAACC,OAAO,CAAC,OAAO,EAAEJ,QAAQ,CAACK,KAAK,CAAC,CAAC,CAAC;MACjD,CAAC,EACDC,KAAK,IAAG;QACN;QACAL,OAAO,CAACK,KAAK,CAACA,KAAK,CAAC;MACtB,CAAC,CACF;KACF,MAAM;MACL;IAAA;EAEJ;EAAC,QAAAC,CAAA,G;qBA7BUnB,cAAc,EAAAoB,EAAA,CAAAC,iBAAA,CAAAC,EAAA,CAAAC,WAAA;EAAA;EAAA,QAAAC,EAAA,G;UAAdxB,cAAc;IAAAyB,SAAA;IAAAC,KAAA;IAAAC,IAAA;IAAAC,MAAA;IAAAC,QAAA,WAAAC,wBAAAC,EAAA,EAAAC,GAAA;MAAA,IAAAD,EAAA;QCT3BX,EAAA,CAAAa,cAAA,eAAU;QAEEb,EAAA,CAAAc,MAAA,sDAA2B;QAAAd,EAAA,CAAAe,YAAA,EAAK;QAExCf,EAAA,CAAAa,cAAA,uBAAkB;QAEVb,EAAA,CAAAc,MAAA,oFAAuE;QAAAd,EAAA,CAAAgB,SAAA,SAAI;QAC3EhB,EAAA,CAAAc,MAAA,qFACJ;QAAAd,EAAA,CAAAe,YAAA,EAAI;QAGZf,EAAA,CAAAa,cAAA,eAAU;QAEEb,EAAA,CAAAc,MAAA,aAAK;QAAAd,EAAA,CAAAe,YAAA,EAAK;QAElBf,EAAA,CAAAa,cAAA,wBAAkB;QACgBb,EAAA,CAAAiB,UAAA,sBAAAC,kDAAA;UAAA,OAAYN,GAAA,CAAAxB,KAAA,EAAO;QAAA,EAAC;QAC9CY,EAAA,CAAAa,cAAA,sBAAgB;QACDb,EAAA,CAAAc,MAAA,oBAAY;QAAAd,EAAA,CAAAe,YAAA,EAAY;QACnCf,EAAA,CAAAgB,SAAA,gBAA2C;QAC/ChB,EAAA,CAAAe,YAAA,EAAiB;QACjBf,EAAA,CAAAa,cAAA,sBAAgB;QACDb,EAAA,CAAAc,MAAA,gBAAQ;QAAAd,EAAA,CAAAe,YAAA,EAAY;QAC/Bf,EAAA,CAAAgB,SAAA,gBAA2D;QAC/DhB,EAAA,CAAAe,YAAA,EAAiB;QACjBf,EAAA,CAAAa,cAAA,WAAK;QACuDb,EAAA,CAAAc,MAAA,aAAK;QAAAd,EAAA,CAAAe,YAAA,EAAS;QACtEf,EAAA,CAAAa,cAAA,YAA2D;QAAAb,EAAA,CAAAc,MAAA,yBAAiB;QAAAd,EAAA,CAAAe,YAAA,EAAI;;;QAXlFf,EAAA,CAAAmB,SAAA,IAAuB;QAAvBnB,EAAA,CAAAoB,UAAA,cAAAR,GAAA,CAAA7B,SAAA,CAAuB"},"metadata":{},"sourceType":"module","externalDependencies":[]}