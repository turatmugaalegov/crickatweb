{"ast":null,"code":"import { MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common\";\nfunction EventdialogComponent_li_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"li\")(1, \"strong\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(3);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const info_r1 = ctx.$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\"\", info_r1.label, \":\");\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", info_r1.value, \" \");\n  }\n}\nexport class EventdialogComponent {\n  constructor(data) {\n    this.data = data;\n    this.eventInfo = []; // Hier wird die Liste der Event-Informationen gespeichert\n  }\n\n  ngOnInit() {\n    // Erstelle die Liste der Event-Informationen\n    this.eventInfo = [{\n      label: 'ID',\n      value: this.data.id\n    }, {\n      label: 'Name',\n      value: this.data.name\n    }, {\n      label: 'Date',\n      value: this.data.date\n    }, {\n      label: 'Type',\n      value: this.data.type\n    }, {\n      label: 'Age Rating',\n      value: this.data.ageRating\n    }, {\n      label: 'Host',\n      value: this.data.host\n    }, {\n      label: 'Ticket Price',\n      value: this.data.ticketPrice\n    }, {\n      label: 'Location',\n      value: this.data.location\n    }];\n  }\n  static #_ = this.ɵfac = function EventdialogComponent_Factory(t) {\n    return new (t || EventdialogComponent)(i0.ɵɵdirectiveInject(MAT_DIALOG_DATA));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: EventdialogComponent,\n    selectors: [[\"app-eventdialog\"]],\n    decls: 4,\n    vars: 1,\n    consts: [[4, \"ngFor\", \"ngForOf\"]],\n    template: function EventdialogComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"h2\");\n        i0.ɵɵtext(1, \"Event Information\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(2, \"ul\");\n        i0.ɵɵtemplate(3, EventdialogComponent_li_3_Template, 4, 2, \"li\", 0);\n        i0.ɵɵelementEnd();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"ngForOf\", ctx.eventInfo);\n      }\n    },\n    dependencies: [i1.NgForOf],\n    styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n  });\n}","map":{"version":3,"names":["MAT_DIALOG_DATA","i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵadvance","ɵɵtextInterpolate1","info_r1","label","value","EventdialogComponent","constructor","data","eventInfo","ngOnInit","id","name","date","type","ageRating","host","ticketPrice","location","_","ɵɵdirectiveInject","_2","selectors","decls","vars","consts","template","EventdialogComponent_Template","rf","ctx","ɵɵtemplate","EventdialogComponent_li_3_Template","ɵɵproperty"],"sources":["/Users/timn/Documents/Studium/Semester 3/Crickat Github/crickatweb/src/app/eventdialog/eventdialog.component.ts","/Users/timn/Documents/Studium/Semester 3/Crickat Github/crickatweb/src/app/eventdialog/eventdialog.component.html"],"sourcesContent":["import { Component, Inject } from '@angular/core';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\n\n@Component({\n  selector: 'app-eventdialog',\n  templateUrl: './eventdialog.component.html',\n  styleUrls: ['./eventdialog.component.css']\n})\nexport class EventdialogComponent {\n  constructor(@Inject(MAT_DIALOG_DATA) public data: any) {}\n\n  eventInfo: any[] = []; // Hier wird die Liste der Event-Informationen gespeichert\n\n  ngOnInit() {\n    // Erstelle die Liste der Event-Informationen\n    this.eventInfo = [\n      { label: 'ID', value: this.data.id },\n      { label: 'Name', value: this.data.name },\n      { label: 'Date', value: this.data.date },\n      { label: 'Type', value: this.data.type },\n      { label: 'Age Rating', value: this.data.ageRating },\n      { label: 'Host', value: this.data.host },\n      { label: 'Ticket Price', value: this.data.ticketPrice },\n      { label: 'Location', value: this.data.location },\n    ];\n  }\n}","<h2>Event Information</h2>\n<ul>\n  <li *ngFor=\"let info of eventInfo\">\n    <strong>{{ info.label }}:</strong> {{ info.value }}\n  </li>\n</ul>"],"mappings":"AACA,SAASA,eAAe,QAAQ,0BAA0B;;;;;ICCxDC,EAAA,CAAAC,cAAA,SAAmC;IACzBD,EAAA,CAAAE,MAAA,GAAiB;IAAAF,EAAA,CAAAG,YAAA,EAAS;IAACH,EAAA,CAAAE,MAAA,GACrC;IAAAF,EAAA,CAAAG,YAAA,EAAK;;;;IADKH,EAAA,CAAAI,SAAA,GAAiB;IAAjBJ,EAAA,CAAAK,kBAAA,KAAAC,OAAA,CAAAC,KAAA,MAAiB;IAAUP,EAAA,CAAAI,SAAA,GACrC;IADqCJ,EAAA,CAAAK,kBAAA,MAAAC,OAAA,CAAAE,KAAA,MACrC;;;ADIF,OAAM,MAAOC,oBAAoB;EAC/BC,YAA4CC,IAAS;IAAT,KAAAA,IAAI,GAAJA,IAAI;IAEhD,KAAAC,SAAS,GAAU,EAAE,CAAC,CAAC;EAFiC;;EAIxDC,QAAQA,CAAA;IACN;IACA,IAAI,CAACD,SAAS,GAAG,CACf;MAAEL,KAAK,EAAE,IAAI;MAAEC,KAAK,EAAE,IAAI,CAACG,IAAI,CAACG;IAAE,CAAE,EACpC;MAAEP,KAAK,EAAE,MAAM;MAAEC,KAAK,EAAE,IAAI,CAACG,IAAI,CAACI;IAAI,CAAE,EACxC;MAAER,KAAK,EAAE,MAAM;MAAEC,KAAK,EAAE,IAAI,CAACG,IAAI,CAACK;IAAI,CAAE,EACxC;MAAET,KAAK,EAAE,MAAM;MAAEC,KAAK,EAAE,IAAI,CAACG,IAAI,CAACM;IAAI,CAAE,EACxC;MAAEV,KAAK,EAAE,YAAY;MAAEC,KAAK,EAAE,IAAI,CAACG,IAAI,CAACO;IAAS,CAAE,EACnD;MAAEX,KAAK,EAAE,MAAM;MAAEC,KAAK,EAAE,IAAI,CAACG,IAAI,CAACQ;IAAI,CAAE,EACxC;MAAEZ,KAAK,EAAE,cAAc;MAAEC,KAAK,EAAE,IAAI,CAACG,IAAI,CAACS;IAAW,CAAE,EACvD;MAAEb,KAAK,EAAE,UAAU;MAAEC,KAAK,EAAE,IAAI,CAACG,IAAI,CAACU;IAAQ,CAAE,CACjD;EACH;EAAC,QAAAC,CAAA,G;qBAjBUb,oBAAoB,EAAAT,EAAA,CAAAuB,iBAAA,CACXxB,eAAe;EAAA;EAAA,QAAAyB,EAAA,G;UADxBf,oBAAoB;IAAAgB,SAAA;IAAAC,KAAA;IAAAC,IAAA;IAAAC,MAAA;IAAAC,QAAA,WAAAC,8BAAAC,EAAA,EAAAC,GAAA;MAAA,IAAAD,EAAA;QCRjC/B,EAAA,CAAAC,cAAA,SAAI;QAAAD,EAAA,CAAAE,MAAA,wBAAiB;QAAAF,EAAA,CAAAG,YAAA,EAAK;QAC1BH,EAAA,CAAAC,cAAA,SAAI;QACFD,EAAA,CAAAiC,UAAA,IAAAC,kCAAA,gBAEK;QACPlC,EAAA,CAAAG,YAAA,EAAK;;;QAHkBH,EAAA,CAAAI,SAAA,GAAY;QAAZJ,EAAA,CAAAmC,UAAA,YAAAH,GAAA,CAAApB,SAAA,CAAY"},"metadata":{},"sourceType":"module","externalDependencies":[]}