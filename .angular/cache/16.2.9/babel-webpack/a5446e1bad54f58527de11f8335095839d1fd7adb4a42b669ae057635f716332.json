{"ast":null,"code":"import { Validators } from '@angular/forms';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../data/event-service\";\nimport * as i2 from \"@angular/forms\";\nimport * as i3 from \"@angular/common\";\nimport * as i4 from \"@angular/material/input\";\nimport * as i5 from \"@angular/material/form-field\";\nimport * as i6 from \"@angular/material/card\";\nimport * as i7 from \"@angular/material/button\";\nfunction EventdialogeditComponent_div_33_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 10);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(ctx_r0.successMessage);\n  }\n}\nfunction EventdialogeditComponent_div_34_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 11);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(ctx_r1.errorMessage);\n  }\n}\nexport class EventdialogeditComponent {\n  constructor(eventService, data, fb) {\n    this.eventService = eventService;\n    this.data = data;\n    this.fb = fb;\n    this.successMessage = '';\n    this.errorMessage = '';\n    this.addEventForm = this.fb.group({\n      name: ['', Validators.required],\n      date: ['', Validators.required],\n      type: ['', Validators.required],\n      ageRating: ['', Validators.required],\n      ticketPrice: ['', Validators.required],\n      location: ['', Validators.required]\n    });\n  }\n  ngOnInit() {\n    this.eventService.getEvents().subscribe(data => {\n      this.eventsE = data;\n    });\n  }\n  updateEvent() {\n    if (this.addEventForm.valid) {\n      this.eventService.updateEvent(this.eventsE.id,\n      // Setze die Event-ID, die du aktualisieren möchtest.\n      this.addEventForm.value).subscribe(response => {\n        // Handle the successful response here\n        console.log(response);\n        this.successMessage = 'Event erfolgreich aktualisiert!';\n      }, error => {\n        // Handle error here\n        console.error(error);\n        this.errorMessage = 'Aktualisierung des Events fehlgeschlagen. Bitte versuche es erneut.';\n      });\n    } else {\n      // Handle form validation error\n      console.error('Form is invalid');\n    }\n  }\n  static #_ = this.ɵfac = function EventdialogeditComponent_Factory(t) {\n    return new (t || EventdialogeditComponent)(i0.ɵɵdirectiveInject(i1.EventService), i0.ɵɵdirectiveInject(MAT_DIALOG_DATA), i0.ɵɵdirectiveInject(i2.FormBuilder));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: EventdialogeditComponent,\n    selectors: [[\"app-eventdialogedit\"]],\n    decls: 35,\n    vars: 3,\n    consts: [[3, \"formGroup\", \"ngSubmit\"], [\"matInput\", \"\", \"formControlName\", \"name\"], [\"matInput\", \"\", \"formControlName\", \"date\"], [\"matInput\", \"\", \"formControlName\", \"type\"], [\"matInput\", \"\", \"formControlName\", \"ageRating\"], [\"matInput\", \"\", \"formControlName\", \"ticketPrice\"], [\"matInput\", \"\", \"formControlName\", \"location\"], [\"mat-raised-button\", \"\", \"color\", \"primary\", \"type\", \"submit\"], [\"class\", \"success-message\", 4, \"ngIf\"], [\"class\", \"error-message\", 4, \"ngIf\"], [1, \"success-message\"], [1, \"error-message\"]],\n    template: function EventdialogeditComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"mat-card\")(1, \"mat-card-header\")(2, \"h1\");\n        i0.ɵɵtext(3, \"Event bearbeiten\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(4, \"mat-card-content\")(5, \"form\", 0);\n        i0.ɵɵlistener(\"ngSubmit\", function EventdialogeditComponent_Template_form_ngSubmit_5_listener() {\n          return ctx.updateEvent();\n        });\n        i0.ɵɵelementStart(6, \"mat-form-field\")(7, \"mat-label\");\n        i0.ɵɵtext(8, \"Name\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(9, \"input\", 1);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(10, \"mat-form-field\")(11, \"mat-label\");\n        i0.ɵɵtext(12, \"Date\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(13, \"input\", 2);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(14, \"mat-form-field\")(15, \"mat-label\");\n        i0.ɵɵtext(16, \"Type\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(17, \"input\", 3);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(18, \"mat-form-field\")(19, \"mat-label\");\n        i0.ɵɵtext(20, \"Age Rating\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(21, \"input\", 4);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(22, \"mat-form-field\")(23, \"mat-label\");\n        i0.ɵɵtext(24, \"Ticket Price\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(25, \"input\", 5);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(26, \"mat-form-field\")(27, \"mat-label\");\n        i0.ɵɵtext(28, \"Location\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(29, \"input\", 6);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(30, \"div\")(31, \"button\", 7);\n        i0.ɵɵtext(32, \"Create Event\");\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵtemplate(33, EventdialogeditComponent_div_33_Template, 2, 1, \"div\", 8);\n        i0.ɵɵtemplate(34, EventdialogeditComponent_div_34_Template, 2, 1, \"div\", 9);\n        i0.ɵɵelementEnd()();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"formGroup\", ctx.addEventForm);\n        i0.ɵɵadvance(28);\n        i0.ɵɵproperty(\"ngIf\", ctx.successMessage);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.errorMessage);\n      }\n    },\n    dependencies: [i3.NgIf, i4.MatInput, i5.MatFormField, i5.MatLabel, i6.MatCard, i6.MatCardContent, i6.MatCardHeader, i7.MatButton, i2.ɵNgNoValidate, i2.DefaultValueAccessor, i2.NgControlStatus, i2.NgControlStatusGroup, i2.FormGroupDirective, i2.FormControlName],\n    styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n  });\n}","map":{"version":3,"names":["Validators","MAT_DIALOG_DATA","i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵadvance","ɵɵtextInterpolate","ctx_r0","successMessage","ctx_r1","errorMessage","EventdialogeditComponent","constructor","eventService","data","fb","addEventForm","group","name","required","date","type","ageRating","ticketPrice","location","ngOnInit","getEvents","subscribe","eventsE","updateEvent","valid","id","value","response","console","log","error","_","ɵɵdirectiveInject","i1","EventService","i2","FormBuilder","_2","selectors","decls","vars","consts","template","EventdialogeditComponent_Template","rf","ctx","ɵɵlistener","EventdialogeditComponent_Template_form_ngSubmit_5_listener","ɵɵelement","ɵɵtemplate","EventdialogeditComponent_div_33_Template","EventdialogeditComponent_div_34_Template","ɵɵproperty"],"sources":["/Users/timn/Documents/Studium/Semester 3/Crickat Github/crickatweb/src/app/eventdialogedit/eventdialogedit.component.ts","/Users/timn/Documents/Studium/Semester 3/Crickat Github/crickatweb/src/app/eventdialogedit/eventdialogedit.component.html"],"sourcesContent":["import { Component, Inject } from '@angular/core';\nimport { EventService } from '../data/event-service';\nimport { FormBuilder, FormControl, FormGroup, Validators } from '@angular/forms';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\n\n@Component({\n  selector: 'app-eventdialogedit',\n  templateUrl: './eventdialogedit.component.html',\n  styleUrls: ['./eventdialogedit.component.css']\n})\nexport class EventdialogeditComponent {\n\n  addEventForm: FormGroup;\n  successMessage: string = '';\n  errorMessage: string = '';\n  public eventsE: any;\n\n  constructor(private eventService: EventService, @Inject(MAT_DIALOG_DATA) public data:any, private fb: FormBuilder) {\n    this.addEventForm = this.fb.group({\n      name: ['', Validators.required],\n      date: ['', Validators.required],\n      type: ['', Validators.required],\n      ageRating: ['', Validators.required],\n      ticketPrice: ['', Validators.required],\n      location: ['', Validators.required],\n    });\n  }\n\n  ngOnInit() {\n    this.eventService.getEvents().subscribe(data => {\n      this.eventsE = data;\n    });\n  }\n\n  updateEvent(): void {\n    if (this.addEventForm.valid) {\n      this.eventService.updateEvent(\n        this.eventsE.id, // Setze die Event-ID, die du aktualisieren möchtest.\n        this.addEventForm.value\n      ).subscribe(\n        response => {\n          // Handle the successful response here\n          console.log(response);\n          this.successMessage = 'Event erfolgreich aktualisiert!';\n        },\n        error => {\n          // Handle error here\n          console.error(error);\n          this.errorMessage = 'Aktualisierung des Events fehlgeschlagen. Bitte versuche es erneut.';\n        }\n      );\n    } else {\n      // Handle form validation error\n      console.error('Form is invalid');\n    }\n  }\n\n}","<mat-card>\n    <mat-card-header>\n        <h1>Event bearbeiten</h1>\n    </mat-card-header>\n    <mat-card-content>\n        <form [formGroup]=\"addEventForm\" (ngSubmit)=\"updateEvent()\">\n            <mat-form-field>\n                <mat-label>Name</mat-label>\n                <input matInput formControlName=\"name\">\n            </mat-form-field>\n            <mat-form-field>\n                <mat-label>Date</mat-label>\n                <input matInput formControlName=\"date\">\n            </mat-form-field>\n            <mat-form-field>\n                <mat-label>Type</mat-label>\n                <input matInput formControlName=\"type\">\n            </mat-form-field>\n            <mat-form-field>\n                <mat-label>Age Rating</mat-label>\n                <input matInput formControlName=\"ageRating\">\n            </mat-form-field>\n            <mat-form-field>\n                <mat-label>Ticket Price</mat-label>\n                <input matInput formControlName=\"ticketPrice\">\n            </mat-form-field>\n            <mat-form-field>\n                <mat-label>Location</mat-label>\n                <input matInput formControlName=\"location\">\n            </mat-form-field>\n            <div>\n                <button mat-raised-button color=\"primary\" type=\"submit\">Create Event</button>\n            </div>\n        </form>\n        <div *ngIf=\"successMessage\" class=\"success-message\">{{ successMessage }}</div>\n        <div *ngIf=\"errorMessage\" class=\"error-message\">{{ errorMessage }}</div>\n    </mat-card-content>\n</mat-card>"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}