{"ast":null,"code":"import { Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"ngx-toastr\";\nimport * as i3 from \"../service/auth.service\";\nimport * as i4 from \"@angular/router\";\nimport * as i5 from \"@angular/material/input\";\nimport * as i6 from \"@angular/material/form-field\";\nimport * as i7 from \"@angular/material/card\";\nimport * as i8 from \"@angular/material/button\";\nexport class LoginComponent {\n  constructor(builder, toastr, service, router) {\n    this.builder = builder;\n    this.toastr = toastr;\n    this.service = service;\n    this.router = router;\n    this.loginform = this.builder.group({\n      username: this.builder.control('', Validators.required),\n      userPassword: this.builder.control('', Validators.required)\n    });\n    sessionStorage.clear();\n  }\n  testmes() {\n    this.toastr.warning('Testmes!');\n  }\n  proceedLogin() {\n    if (this.loginform.valid) {\n      this.service.Getbycode(this.loginform.value.username).subscribe(res => {\n        this.userdata = res;\n        console.log(this.userdata);\n        if (this.userdata.userPassword == this.loginform.value.userPassword) {\n          if (this.userdata.isactive) {\n            sessionStorage.setItem('username', this.userdata.id);\n            sessionStorage.setItem('userRole', this.userdata.role);\n            this.router.navigate(['']);\n          } else {\n            this.toastr.warning('The account is inactive. To activate the account contact an admin.');\n          }\n        } else {\n          this.toastr.warning('Please check entered username and password. If you forgot your password contact an admin.');\n        }\n      });\n    }\n  }\n  static #_ = this.…µfac = function LoginComponent_Factory(t) {\n    return new (t || LoginComponent)(i0.…µ…µdirectiveInject(i1.FormBuilder), i0.…µ…µdirectiveInject(i2.ToastrService), i0.…µ…µdirectiveInject(i3.AuthService), i0.…µ…µdirectiveInject(i4.Router));\n  };\n  static #_2 = this.…µcmp = /*@__PURE__*/i0.…µ…µdefineComponent({\n    type: LoginComponent,\n    selectors: [[\"app-login\"]],\n    decls: 28,\n    vars: 1,\n    consts: [[1, \"example-form\", 3, \"formGroup\", \"ngSubmit\"], [1, \"example-full-width\"], [\"matInput\", \"\", \"formControlName\", \"username\"], [\"type\", \"password\", \"matInput\", \"\", \"formControlName\", \"userPassword\"], [\"mat-raised-button\", \"\", \"color\", \"primary\"], [\"routerLink\", \"/register\", \"mat-raised-button\", \"\", \"color\", \"accent\"]],\n    template: function LoginComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.…µ…µelementStart(0, \"mat-card\")(1, \"mat-card-header\")(2, \"h1\");\n        i0.…µ…µtext(3, \"Willkommen auf Crickat \\uD83D\\uDC4B\\uD83C\\uDFFC\");\n        i0.…µ…µelementEnd()();\n        i0.…µ…µelementStart(4, \"mat-card-content\")(5, \"p\");\n        i0.…µ…µtext(6, \" Hier findest du Events in deiner N\\u00E4he, die dich wirklich interessieren!\");\n        i0.…µ…µelement(7, \"br\");\n        i0.…µ…µtext(8, \" Um die Seite zu nutzen musst du einen Account erstellen bzw. dich einloggen. \");\n        i0.…µ…µelementEnd()()();\n        i0.…µ…µelementStart(9, \"mat-card\")(10, \"mat-card-header\")(11, \"h1\");\n        i0.…µ…µtext(12, \"User Login\");\n        i0.…µ…µelementEnd()();\n        i0.…µ…µelementStart(13, \"mat-card-content\")(14, \"form\", 0);\n        i0.…µ…µlistener(\"ngSubmit\", function LoginComponent_Template_form_ngSubmit_14_listener() {\n          return ctx.proceedLogin();\n        });\n        i0.…µ…µelementStart(15, \"mat-form-field\", 1)(16, \"mat-label\");\n        i0.…µ…µtext(17, \"User Name\");\n        i0.…µ…µelementEnd();\n        i0.…µ…µelement(18, \"input\", 2);\n        i0.…µ…µelementEnd();\n        i0.…µ…µelementStart(19, \"mat-form-field\", 1)(20, \"mat-label\");\n        i0.…µ…µtext(21, \"Password\");\n        i0.…µ…µelementEnd();\n        i0.…µ…µelement(22, \"input\", 3);\n        i0.…µ…µelementEnd();\n        i0.…µ…µelementStart(23, \"div\")(24, \"button\", 4);\n        i0.…µ…µtext(25, \"Login\");\n        i0.…µ…µelementEnd();\n        i0.…µ…µelementStart(26, \"a\", 5);\n        i0.…µ…µtext(27, \"No Account? Click here to register\");\n        i0.…µ…µelementEnd()()()()();\n      }\n      if (rf & 2) {\n        i0.…µ…µadvance(14);\n        i0.…µ…µproperty(\"formGroup\", ctx.loginform);\n      }\n    },\n    dependencies: [i4.RouterLink, i5.MatInput, i6.MatFormField, i6.MatLabel, i7.MatCard, i7.MatCardContent, i7.MatCardHeader, i8.MatAnchor, i8.MatButton, i1.…µNgNoValidate, i1.DefaultValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i1.FormGroupDirective, i1.FormControlName],\n    styles: [\"mat-card[_ngcontent-%COMP%] {\\n    margin: 20px;\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvbG9naW4vbG9naW4uY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtJQUNJLFlBQVk7QUFDaEIiLCJzb3VyY2VzQ29udGVudCI6WyJtYXQtY2FyZCB7XG4gICAgbWFyZ2luOiAyMHB4O1xufSJdLCJzb3VyY2VSb290IjoiIn0= */\"]\n  });\n}","map":{"version":3,"names":["Validators","LoginComponent","constructor","builder","toastr","service","router","loginform","group","username","control","required","userPassword","sessionStorage","clear","testmes","warning","proceedLogin","valid","Getbycode","value","subscribe","res","userdata","console","log","isactive","setItem","id","role","navigate","_","i0","…µ…µdirectiveInject","i1","FormBuilder","i2","ToastrService","i3","AuthService","i4","Router","_2","selectors","decls","vars","consts","template","LoginComponent_Template","rf","ctx","…µ…µelementStart","…µ…µtext","…µ…µelementEnd","…µ…µelement","…µ…µlistener","LoginComponent_Template_form_ngSubmit_14_listener","…µ…µadvance","…µ…µproperty"],"sources":["/Users/timn/Documents/Studium/Semester 3/Crickat Github/crickatweb/src/app/login/login.component.ts","/Users/timn/Documents/Studium/Semester 3/Crickat Github/crickatweb/src/app/login/login.component.html"],"sourcesContent":["import { Component } from '@angular/core';\nimport { FormBuilder, Validators } from '@angular/forms';\nimport { ToastrService } from 'ngx-toastr';\nimport { AuthService } from '../service/auth.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent {\n\n  constructor(private builder: FormBuilder, private toastr: ToastrService,\n    private service: AuthService, private router: Router) {\n      sessionStorage.clear();\n  }\n\n  userdata:any;\n\n  loginform = this.builder.group({\n    username: this.builder.control('', Validators.required),\n    userPassword: this.builder.control('', Validators.required)\n  })\n\n  testmes(){\n    this.toastr.warning('Testmes!');\n  }\n\n  proceedLogin() {\n    if (this.loginform.valid) {\n      this.service.Getbycode(this.loginform.value.username).subscribe(res => {\n        this.userdata = res;\n        console.log(this.userdata);\n        if (this.userdata.userPassword == this.loginform.value.userPassword) {\n          if (this.userdata.isactive) {\n            sessionStorage.setItem('username', this.userdata.id);\n            sessionStorage.setItem('userRole', this.userdata.role);\n            this.router.navigate(['']);\n          } else {\n            this.toastr.warning('The account is inactive. To activate the account contact an admin.');\n          }\n        } else {\n          this.toastr.warning('Please check entered username and password. If you forgot your password contact an admin.');\n        }\n      });\n    }\n  }\n\n}\n","<mat-card>\n    <mat-card-header>\n        <h1>Willkommen auf Crickat üëãüèº</h1>\n    </mat-card-header>\n    <mat-card-content>\n        <p>\n        Hier findest du Events in deiner N√§he, die dich wirklich interessieren!<br>\n        Um die Seite zu nutzen musst du einen Account erstellen bzw. dich einloggen.\n        </p>\n    </mat-card-content>\n</mat-card>\n<mat-card>\n    <mat-card-header>\n        <h1>User Login</h1>\n    </mat-card-header>\n    <mat-card-content>\n        <form class=\"example-form\" [formGroup]=\"loginform\" (ngSubmit)=\"proceedLogin()\">\n            <mat-form-field class=\"example-full-width\">\n              <mat-label>User Name</mat-label>\n              <input matInput formControlName=\"username\">\n            </mat-form-field>\n            <mat-form-field class=\"example-full-width\">\n                <mat-label>Password</mat-label>\n                <input type=\"password\" matInput formControlName=\"userPassword\">\n            </mat-form-field>\n            <div>\n                <button mat-raised-button color=\"primary\">Login</button>\n                <a routerLink=\"/register\" mat-raised-button color=\"accent\">No Account? Click here to register</a>\n            </div>\n        </form>\n    </mat-card-content>\n</mat-card>"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}